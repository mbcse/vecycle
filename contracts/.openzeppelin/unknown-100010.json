{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xd30684565c1fd2e746ac68501dff2a53328d47f4",
      "txHash": "0xc908d40c258152090570969831466929f1effc891093eac23704b1da40cad0f1",
      "kind": "uups"
    },
    {
      "address": "0x50f31e16e55dc20d0d7eec418748c84a9f3dcc15",
      "txHash": "0xe1c3fc5d9fb6b358f9d922b1ba9609223cd8bd80568a20fefd9f0b321fc83d46",
      "kind": "uups"
    },
    {
      "address": "0x920dc24856e0039cac8a0e92deab750f8418d861",
      "txHash": "0xce12934d7d17807207410ebac966f2bdc4ac80902e2816669347fdd44e19479c",
      "kind": "uups"
    },
    {
      "address": "0x8d1ae212177664ba5d053b9c6cb3d5a21f319ca5",
      "txHash": "0xae8af9627b3bc3bd00b79f61134ab00c7527d33869c6ed63b743885cbd577650",
      "kind": "uups"
    },
    {
      "address": "0x3fd959830f33d0d04e9a80e4a3d9db6652435ed7",
      "txHash": "0xf9b49b6718191fe9c66ea43326c38e40970c38150a8248ef9c83a202271b9030",
      "kind": "uups"
    }
  ],
  "impls": {
    "c39eb7d2084006d6610accf800c00988621c83573d321a362b360ff3ec1149ab": {
      "address": "0x38104c384f5de3d593cce3b895c86c3a46dcf936",
      "txHash": "0x214f07a9acf271388f437a1943c116f1f40214ab05e53609cd80a21306e3e5d6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:21"
          },
          {
            "label": "_nextDisputeId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:22"
          },
          {
            "label": "rewardsPool",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IX2EarnRewardsPool)6297",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:25"
          },
          {
            "label": "APP_ID",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:26"
          },
          {
            "label": "_paymentToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:28"
          },
          {
            "label": "productInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(ProductInfo)5477_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:57"
          },
          {
            "label": "disputeInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(DisputeInfo)5498_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:58"
          },
          {
            "label": "deliveryTimers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)418_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)523_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IX2EarnRewardsPool)6297": {
            "label": "contract IX2EarnRewardsPool",
            "numberOfBytes": "20"
          },
          "t_enum(ProductApprovalStatus)5456": {
            "label": "enum VeCycle.ProductApprovalStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ProductListingStatus)5452": {
            "label": "enum VeCycle.ProductListingStatus",
            "members": [
              "ACTIVE",
              "SOLD",
              "DELIVERED",
              "COMPLETED",
              "IN_DISPUTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(DisputeInfo)5498_storage)": {
            "label": "mapping(uint256 => struct VeCycle.DisputeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProductInfo)5477_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ProductInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(DisputeInfo)5498_storage": {
            "label": "struct VeCycle.DisputeInfo",
            "members": [
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "approvals",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rejections",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rejectors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProductInfo)5477_storage": {
            "label": "struct VeCycle.ProductInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "listingStatus",
                "type": "t_enum(ProductListingStatus)5452",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approvalStatus",
                "type": "t_enum(ProductApprovalStatus)5456",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "deliveryDeadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "disputeRaised",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "disputeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1568a00e038d8c680d24b3b44e82b27c93b2669ee1bc5fe56363681e3970ed43": {
      "address": "0x6ad92b74dbd1c0c4d19a0a27be77e88b0b2cd881",
      "txHash": "0x2bfea82e211e01107674df6c8275aca1c8da0f5040a2c27f477d3b1b589a1803",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:21"
          },
          {
            "label": "_nextDisputeId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:22"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:25"
          },
          {
            "label": "rewardsPool",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IX2EarnRewardsPool)6392",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:28"
          },
          {
            "label": "APP_ID",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:29"
          },
          {
            "label": "_paymentToken",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:31"
          },
          {
            "label": "productInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:61"
          },
          {
            "label": "disputeInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:62"
          },
          {
            "label": "deliveryTimers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)418_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)523_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IX2EarnRewardsPool)6392": {
            "label": "contract IX2EarnRewardsPool",
            "numberOfBytes": "20"
          },
          "t_enum(ProductApprovalStatus)5460": {
            "label": "enum VeCycle.ProductApprovalStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ProductListingStatus)5456": {
            "label": "enum VeCycle.ProductListingStatus",
            "members": [
              "ACTIVE",
              "SOLD",
              "DELIVERED",
              "COMPLETED",
              "IN_DISPUTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)": {
            "label": "mapping(uint256 => struct VeCycle.DisputeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ProductInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(DisputeInfo)5504_storage": {
            "label": "struct VeCycle.DisputeInfo",
            "members": [
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "approvals",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rejections",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rejectors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProductInfo)5483_storage": {
            "label": "struct VeCycle.ProductInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "listingStatus",
                "type": "t_enum(ProductListingStatus)5456",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approvalStatus",
                "type": "t_enum(ProductApprovalStatus)5460",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "deliveryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "deliveredTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "disputeRaised",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "disputeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ea799695ae6b987ed21eb6c861a4d98c21f12962618ec5c3d7aa951c49b2eb7a": {
      "address": "0x7e4ef0e01cb2b88bcbe93232297ea7a68a610318",
      "txHash": "0xd753004b8c33e2483257ac7544b15710041b08a84e546391af13d148d65cefa9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:21"
          },
          {
            "label": "_nextDisputeId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:22"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:25"
          },
          {
            "label": "rewardsPool",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IX2EarnRewardsPool)6542",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:28"
          },
          {
            "label": "APP_ID",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:29"
          },
          {
            "label": "_paymentToken",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:31"
          },
          {
            "label": "productInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:61"
          },
          {
            "label": "disputeInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:62"
          },
          {
            "label": "deliveryTimers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:63"
          },
          {
            "label": "userListedProducts",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:65"
          },
          {
            "label": "_nextContentEntryId",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:215"
          },
          {
            "label": "contentEntries",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(ContentEntry)6140_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:217"
          },
          {
            "label": "userContentEntries",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:218"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)418_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)523_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IX2EarnRewardsPool)6542": {
            "label": "contract IX2EarnRewardsPool",
            "numberOfBytes": "20"
          },
          "t_enum(ProductApprovalStatus)5460": {
            "label": "enum VeCycle.ProductApprovalStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ProductListingStatus)5456": {
            "label": "enum VeCycle.ProductListingStatus",
            "members": [
              "ACTIVE",
              "SOLD",
              "DELIVERED",
              "COMPLETED",
              "IN_DISPUTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ContentEntry)6140_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ContentEntry)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)": {
            "label": "mapping(uint256 => struct VeCycle.DisputeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ProductInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(ContentEntry)6140_storage": {
            "label": "struct VeCycle.ContentEntry",
            "members": [
              {
                "label": "contentType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "twitterLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contentLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(DisputeInfo)5504_storage": {
            "label": "struct VeCycle.DisputeInfo",
            "members": [
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "approvals",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rejections",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rejectors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProductInfo)5483_storage": {
            "label": "struct VeCycle.ProductInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "listingStatus",
                "type": "t_enum(ProductListingStatus)5456",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approvalStatus",
                "type": "t_enum(ProductApprovalStatus)5460",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "deliveryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "deliveredTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "disputeRaised",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "disputeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a5244ffc8893fdd4502c124e67cbe7b0947511dc67684d319172efc41b7ea4b0": {
      "address": "0x8e588c47c6e40ba3f0009f8d50883f26533c08e2",
      "txHash": "0xaa0d7c62fd591930b9288cccc35cb7240c82ea1a93b490a9b1e0c622f608dcf4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:21"
          },
          {
            "label": "_nextDisputeId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:22"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:25"
          },
          {
            "label": "rewardsPool",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IX2EarnRewardsPool)6566",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:28"
          },
          {
            "label": "APP_ID",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:29"
          },
          {
            "label": "_paymentToken",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:31"
          },
          {
            "label": "productInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:61"
          },
          {
            "label": "disputeInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:62"
          },
          {
            "label": "deliveryTimers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:63"
          },
          {
            "label": "userListedProducts",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:65"
          },
          {
            "label": "_nextContentEntryId",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:219"
          },
          {
            "label": "contentEntries",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(ContentEntry)6152_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:221"
          },
          {
            "label": "userContentEntries",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:222"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)418_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)523_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IX2EarnRewardsPool)6566": {
            "label": "contract IX2EarnRewardsPool",
            "numberOfBytes": "20"
          },
          "t_enum(ProductApprovalStatus)5460": {
            "label": "enum VeCycle.ProductApprovalStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ProductListingStatus)5456": {
            "label": "enum VeCycle.ProductListingStatus",
            "members": [
              "ACTIVE",
              "SOLD",
              "DELIVERED",
              "COMPLETED",
              "IN_DISPUTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ContentEntry)6152_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ContentEntry)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)": {
            "label": "mapping(uint256 => struct VeCycle.DisputeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ProductInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(ContentEntry)6152_storage": {
            "label": "struct VeCycle.ContentEntry",
            "members": [
              {
                "label": "contentType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "twitterLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contentLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(DisputeInfo)5504_storage": {
            "label": "struct VeCycle.DisputeInfo",
            "members": [
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "approvals",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rejections",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rejectors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProductInfo)5483_storage": {
            "label": "struct VeCycle.ProductInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "listingStatus",
                "type": "t_enum(ProductListingStatus)5456",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approvalStatus",
                "type": "t_enum(ProductApprovalStatus)5460",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "deliveryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "deliveredTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "disputeRaised",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "disputeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7404bfab1893054b58ed0fce8809d22990292fb9c2576abbb099da16095429e4": {
      "address": "0xe0f73f3ec866d3c97216fe9437c96bf9f863cfb3",
      "txHash": "0x8a0b08815fc021bb4b5341e1fdbfbf45fc6fd57efd6b9be4ae50e13fa58c7cba",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:21"
          },
          {
            "label": "_nextDisputeId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:22"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:25"
          },
          {
            "label": "rewardsPool",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IX2EarnRewardsPool)6568",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:28"
          },
          {
            "label": "APP_ID",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:29"
          },
          {
            "label": "_paymentToken",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:31"
          },
          {
            "label": "productInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:61"
          },
          {
            "label": "disputeInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:62"
          },
          {
            "label": "deliveryTimers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:63"
          },
          {
            "label": "userListedProducts",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:65"
          },
          {
            "label": "_nextContentEntryId",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:219"
          },
          {
            "label": "contentEntries",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(ContentEntry)6153_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:221"
          },
          {
            "label": "userContentEntries",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VeCycle",
            "src": "contracts/VeCycle.sol:222"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)418_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)249_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)523_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IX2EarnRewardsPool)6568": {
            "label": "contract IX2EarnRewardsPool",
            "numberOfBytes": "20"
          },
          "t_enum(ProductApprovalStatus)5460": {
            "label": "enum VeCycle.ProductApprovalStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(ProductListingStatus)5456": {
            "label": "enum VeCycle.ProductListingStatus",
            "members": [
              "ACTIVE",
              "SOLD",
              "DELIVERED",
              "COMPLETED",
              "IN_DISPUTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ContentEntry)6153_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ContentEntry)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DisputeInfo)5504_storage)": {
            "label": "mapping(uint256 => struct VeCycle.DisputeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProductInfo)5483_storage)": {
            "label": "mapping(uint256 => struct VeCycle.ProductInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(ContentEntry)6153_storage": {
            "label": "struct VeCycle.ContentEntry",
            "members": [
              {
                "label": "contentType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "twitterLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contentLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(DisputeInfo)5504_storage": {
            "label": "struct VeCycle.DisputeInfo",
            "members": [
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "approvals",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rejections",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rejectors",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProductInfo)5483_storage": {
            "label": "struct VeCycle.ProductInfo",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "listingStatus",
                "type": "t_enum(ProductListingStatus)5456",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approvalStatus",
                "type": "t_enum(ProductApprovalStatus)5460",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "deliveryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "deliveredTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "disputeRaised",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "disputeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
